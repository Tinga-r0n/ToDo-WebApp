@{
    Layout = null;
    ViewData["Title"] = "LogIn";
}

<head>
    <link rel="stylesheet" href="~/css/style.css" asp-append-version="true" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<body>
    <section>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>
        <span></span>

    <div class="box">
        <div class="box-effects"></div>

        <!-- LOGIN FORM -->
        <div class="login" id="loginForm">
            <div class="loginBx">
                <h2 class="icon">
                    <i class="fa-solid fa-right-to-bracket"></i> Login
                        <img src="" alt="Logo" class="icon-image">

                </h2>
                    <div class="input-box">
                        <input class="input-field" id="email" name="email" type="email" required>
                        <label class="label-input">Email</label>
                        <div class="error-message" id="emailError"></div> <!-- Error Message -->
                    </div>
                    <div class="input-box">
                        <input class="input-field" id="password" name="password" type="password" required>
                        <label class="label-input">Password</label>
                        <i class="fa-solid fa-eye toggle-password" onclick="togglePassword('password')"></i>
                    
                    </div>
           
                    <div class="error-message" id="passwordError"></div> <!-- Error Message -->
                    <button type="button" class="btn" onclick="login()">Log in</button>

            </div>
        </div>

        <!-- CHANGE PASSWORD FORM -->
        <div class="login hidden" id="changePasswordForm">
            <div class="loginBx">
                <h2 class="icon">
                    <i class="fa-solid fa-lock"></i> Change Password
                    <img src="/images/logo.png" alt="" class="icon-image">
                </h2>
                <div class="input-box">
                    <input class="input-field" id="newPassword" name="new-password" type="password" required>
                    <label class="label-input">New Password</label>
                    <i class="fa-solid fa-eye toggle-password" onclick="togglePassword('newPassword')"></i>
                </div>
                <div class="input-box">
                    <input class="input-field" id="confirmPassword" name="confirm-password" type="password" required>
                    <label class="label-input">Confirm Password</label>
                    <i class="fa-solid fa-eye toggle-password" onclick="togglePassword('confirmPassword')"></i>
                </div>
                <button type="button" class="btn" onclick="changePassword()">Save</button>
                <button type="button" class="btn btn-secondary" onclick="showLogin()">Cancel</button>
            </div>
        </div>
    </div>
    </section>

    <div id="customToast" class="custom-toast">
        <span id="customToastMessage"></span>
    </div>
    <div id="loadingOverlay" class="hidden">
        <div class="loader"></div>
    </div>


    <!-- JavaScript -->
    <script>

           const baseUrl = (window.location.origin.includes("localhost")) ? window.location.origin : window.location.origin + "/DoneDash";

                       async function login() {
            let emailInput = document.getElementById("email");
            let passwordInput = document.getElementById("password");
            let email = emailInput.value.trim();
            let password = passwordInput.value.trim();

            document.getElementById("emailError").innerText = "";
            document.getElementById("passwordError").innerText = "";
            emailInput.classList.remove("error");
            passwordInput.classList.remove("error");

            let hasError = false;

            if (!email) {
                document.getElementById("emailError").innerText = "";
                emailInput.classList.add("error");
                hasError = true;
            }
            if (!password) {
                document.getElementById("passwordError").innerText = "";
                passwordInput.classList.add("error");
                hasError = true;
            }

            if (hasError) {
                showToast("Email and password are required!", "error");
                return;
            }

            // Show loading animation
            document.getElementById("loadingOverlay").classList.remove("hidden");

            let response = await fetch(`${baseUrl}/api/LogIn/login`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ email, password }),
                credentials: "include"
            });

            let result = await response.json();

            // Hide loading animation after getting the response
            document.getElementById("loadingOverlay").classList.add("hidden");

            if (response.ok) {
                let userRole = result.role;

                if (result.isDefaultPassword) {
                    document.getElementById("loginForm").classList.add("hidden");
                    document.getElementById("changePasswordForm").classList.remove("hidden");
                } else {
                    // Show loading animation before redirecting
                    document.getElementById("loadingOverlay").classList.remove("hidden");

                    setTimeout(() => {
                        let redirectUrl = (userRole === "admin") ? "/Home/UserReg" : "/Home/Index";
                        window.location.href = baseUrl + redirectUrl;
                    }, 1500); // Smooth transition before redirecting
                }
            } else {
                showToast(result.message || "Invalid email or password.", "error");
                emailInput.classList.add("error");
                passwordInput.classList.add("error");
            }
        }


        document.addEventListener("DOMContentLoaded", function () {
            let emailInput = document.getElementById("email");
            let passwordInput = document.getElementById("password");

            emailInput.addEventListener("input", function () {
                if (emailInput.value.trim() !== "") {
                    clearFieldError(emailInput, "emailError");
                }
            });


            passwordInput.addEventListener("input", function () {
                if (passwordInput.value.trim() !== "") {
                    clearFieldError(passwordInput, "passwordError");
                }
            });

            function clearFieldError(inputField, errorFieldId) {
                let errorElement = document.getElementById(errorFieldId);

                if (errorElement) {
                    errorElement.innerText = "";
                }

                inputField.classList.remove("error");
            }
        });


        async function changePassword() {
            let newPassword = document.getElementById("newPassword").value;
            let confirmPassword = document.getElementById("confirmPassword").value;

            if (newPassword !== confirmPassword) {

                 showToast("Passwords do not match!", "error");
                return;
            }

            if (newPassword.length < 6) {
                alert("Password must be at least 6 characters long!");
                return;
            }

            let response = await fetch(`${baseUrl}/api/LogIn/change-password`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ newPassword }),
                credentials: "include"
            });

            let result = await response.json();

            if (response.ok) {

                  showToast("Password changed successfully!", "success");


                let userAuthCookie = document.cookie.split("; ").find(row => row.startsWith("UserAuth="));

                if (userAuthCookie) {
                    let userAuthValue = decodeURIComponent(userAuthCookie.split("=")[1]);
                    let parts = userAuthValue.split("|");

                    if (parts.length >= 3) {
                        let role = parts[1].trim();


                       setTimeout(() => {
                    let redirectUrl = (role === "admin") ? "/Home/UserReg" : "/Home/Index";
                    window.location.href = baseUrl + redirectUrl;
                }, 1500);
                return;
                    }
                }

                window.location.href = "/Home/LogIn";
            } else {
                alert(result.message);
            }
        }


        function togglePassword(fieldId) {
            let passwordField = document.getElementById(fieldId);
            let icon = passwordField.nextElementSibling;

            if (passwordField.type === "password") {
                passwordField.type = "text";
                icon.classList.remove("fa-eye");
                icon.classList.add("fa-eye-slash");
            } else {
                passwordField.type = "password";
                icon.classList.remove("fa-eye-slash");
                icon.classList.add("fa-eye");
            }
        }


        function showToast(message, type = "error") {
            let toast = document.getElementById("customToast");
            let toastMessage = document.getElementById("customToastMessage");

            // Set message
            toastMessage.innerText = message;

            // Change color based on type
            if (type === "success") {
                toast.style.backgroundColor = "#28a745"; // Green for success
            } else {
                toast.style.backgroundColor = "#d9534f"; // Red for error
            }

            // Show toast
            toast.classList.add("show");

            // Hide toast after 3 seconds
            setTimeout(() => {
                toast.classList.remove("show");
            }, 3000);
        }
            document.addEventListener("DOMContentLoaded", function () {
            let image = document.querySelector(".icon-image");
            let baseUrl = window.location.origin;

            if (baseUrl.includes("localhost")) {
                image.src = "/images/logo.png";  // Local environment (No 'DoneDash')
            } else {
                image.src = "/DoneDash/images/logo.png";  // Dev environment (Has 'DoneDash')
            }
        });


    </script>

</body>
